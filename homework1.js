
var result1 = 'number' + 3 + 3
/* 
Результат: 'number33'
Пояснення: JavaScript використовує конкатенацію рядків, якщо один з операндів є рядком
*/

var result2 = null + 3
/* 
Результат: 3
Пояснення: null конвертується в 0 при математичних операціях.
*/

var result3 = 5 && "qwerty"
/* 
Результат: "qwerty"
Пояснення: Логічний оператор && повертає другий операнд, якщо обидва істинні.
*/

var result4 = +'40' + +'2' + "hillel"
/* 
Результат: 42hillel
Пояснення: Унарний плюс конвертує рядкові значення '40' та '2' в числа. 
Після цього відбувається додавання чисел, а результуюче число конкатенується з рядком "hillel".
*/

var result5 = '10' - 5 === 6
/* 
Результат: false
Пояснення: Рядок '10' конвертується в число, і потім відбувається порівняння.
10 - 5 не дорівнює 6, отже, вираз повертає false.
*/

var result6 = true + false
/* 
Результат: 1
Пояснення: true конвертується в 1, а false - в 0 при арифметичних операціях.
*/

var result7 = '4px' - 3
/* 
Результат: NaN
Пояснення: Оператор віднімання спробує конвертувати рядок '4px' в число, але це невдалося, отже, результат - NaN (Not a Number).
*/

var result8 = '4' - 3
/* 
Результат: 1
Пояснення: Рядок '4' конвертується в число, і відбувається віднімання.
*/

var result9 = '6' + 3 ** 0
/* 
Результат: '61'
Пояснення: Рядок '6' конкатенується з результатом виразу 3 ** 0, яке дорівнює 1.
*/

var result10 = 12 / '6'
/* 
Результат: 2
Пояснення: Рядок '6' конвертується в число, і відбувається ділення 12 на 6.
*/

var result11 = '10' + (5 === 6)
/* 
Результат: 10false
Пояснення: Рядок '10' конкатенується з результатом логічного виразу (5 === 6), який дорівнює false.
*/

var result12 = null == ''
/* 
Результат: false
Пояснення: Результат порівняння null == '' буде false, оскільки значення null і порожній рядок '' не рівні з точки зору оператора рівності.
*/

var result13 = 3 ** (9 / 3)
/* 
Результат: 27
Пояснення: Вираз 9 / 3 дорівнює 3, і потім відбувається підняття 3 до ступеня 3.
*/

var result14 = !!'false' == !!'true'
/* 
Результат: true
Пояснення: Ці два рядки в логічному контексті будуть істинними значеннями (так як це не порожні рядки).
Другий унарний оператор ! відміняє дію першого оператора !. Тому маємо вираз true == true.
Отже, результат виразу !!'false' == !!'true' дорівнює true.
*/

var result15 = 0 || '0' && 1
/* 
Результат: 1
Пояснення: Логічний оператор || повертає істинний операнд. Перший операнд 0 є false, а значення '0' є true. Отже, результат цього виразу буде '0'.
Логічний оператор && повертає перший ложний операнд або останній операнд, якщо всі інші є істинними. У випадку '0' && 1 обидва операнда вважаються істинними.
Отже, результат виразу є 1.
*/

var result16 = (+null == false) < 1
/* 
Результат: false
Пояснення: Оператор +null конвертує null в 0, тоді порівнюється з false (яке також конвертується в 0).
Результат цього порівняння (0 == 0) дорівнює true, і потім true конвертується в 1. 1 < 1 буде false.
*/

var result17 = false && true || true
/* 
Результат: true
Пояснення: Логічний оператор && повертає false, якщо один з операндів - false. 
Логічний оператор || повертає true, якщо один з операндів - true. Таким чином, результат - true.
*/

var result18 = false && (false || true)
/* 
Результат: false
Пояснення: Логічний оператор || повертає true, оскільки один з операндів - true.
При цьому, логічний оператор && повертає false, оскільки один з операндів - false.
*/

var result19 = (+null == false) < 1 ** 5
/* 
Результат: false
Пояснення: Оператор +null конвертує null в 0, тоді порівнюється з false (яке також конвертується в 0).
Результат цього порівняння (0 == 0) дорівнює true, і потім true конвертується в 1.
1 ** 5 буде все одно 1. Тому маємо порівняння 1 < 1, з чого відповідь false.
*/

//перевірка
console.log(result1)
console.log(result2) 
console.log(result3)
console.log(result4)
console.log(result5)
console.log(result6)
console.log(result7)
console.log(result8)
console.log(result9)
console.log(result10)
console.log(result11)
console.log(result12)
console.log(result13)
console.log(result14)
console.log(result15)
console.log(result16) 
console.log(result17)
console.log(result18)
console.log(result19)